const d = document,
  scrollController = new AbortController(),
  navController = new AbortController(),
  cleanup = () => {
    scrollController.abort(), navController.abort();
  };
function lazyLoadBackgroundImages() {
  let e = document.querySelectorAll("[data-setbg]"),
    t = new IntersectionObserver(
      (e, t) => {
        e.forEach((e) => {
          if (e.isIntersecting) {
            let a = e.target,
              o = a.getAttribute("data-setbg");
            (a.style.backgroundImage = `url(../images/${o})`), t.unobserve(a);
          }
        });
      },
      { threshold: 0.1 }
    );
  e.forEach((e) => {
    t.observe(e);
  });
}
function initializeContactForm() {
  let e = d.querySelector("#form-scroll");
  if (e) {
    let t = new IntersectionObserver(
      (e) => {
        e.forEach((e) => {
          e.isIntersecting &&
            !window.grecaptcha &&
            (loadRecaptcha(), t.unobserve(e.target));
        });
      },
      { threshold: 0.01 }
    );
    t.observe(e);
  }
}
function initializeHeroBackground() {
  let e = d.querySelector(".hero-component-bg");
  if (e) {
    let t = e.getAttribute("data-setbg");
    e.style.backgroundImage = `url(../../images/${t})`;
  }
}
function handleScrollToForm() {
  let e = new URLSearchParams(window.location.search);
  if (e.has("message") && ("contacto.php" === page || "contacto" === page)) {
    let t = d.getElementById("form-scroll");
    console.log(t),
      t &&
        ((t.style.scrollMargin = "7rem"),
        t.scrollIntoView({ behavior: "smooth", top: 80 }));
  }
}
function initializeClickioConsent() {
  let e = document.createElement("div");
  document.body.insertBefore(e, document.body.firstChild);
  let t = new MutationObserver((e) => {
    e.forEach((e) => {
      e.addedNodes.length &&
        e.addedNodes.forEach((e) => {
          e.classList &&
            e.classList.contains("cl-consent-node-p") &&
            requestAnimationFrame(() => {
              e.classList.add("loaded");
            });
        });
    });
  });
  t.observe(document.body, { childList: !0, subtree: !0 });
}
d.addEventListener("DOMContentLoaded", () => {
  "use strict";
  let e = d.getElementById("main"),
    t = e ? e.offsetTop : 0,
    a = d.querySelector(".navbar");
  window.addEventListener(
    "scroll",
    () => {
      let e = Math.round(window.scrollY);
      e > t
        ? a.classList.add("past-main", "effect-main")
        : a.classList.remove("past-main");
    },
    { signal: scrollController.signal }
  );
  let o = d.querySelectorAll(".nav-link"),
    r = d.getElementById("navbarCollapse"),
    l = new bootstrap.Collapse(r, { toggle: !1 });
  o.forEach((e) => {
    e.addEventListener(
      "click",
      () => {
        l.hide();
      },
      { signal: navController.signal }
    );
  });
  let n = window.location.pathname.split("/"),
    s = n[n.length - 1],
    i = d.querySelector('a[href="' + s + '"]');
  "" !== s &&
    "index.php" !== s &&
    i &&
    (i.classList.add("active-page"), (i.ariaSelected = "true"));
  let c = d.querySelector(".hero-parallax");
  window.addEventListener("scroll", () => {
    let e = window.scrollY;
    c && (c.style.backgroundPositionY = `${0.5 * e}px`);
  });
  let m = window.location.pathname.split("/");
  if ("politica-de-privacidad.php" === m[m.length - 1]) {
    let p = d.querySelector(".navbar");
    p.style.backgroundColor = "#00909b";
  }
  initBlogMasonry(),
    initializeContactForm(),
    initializeHeroBackground(),
    handleScrollToForm(),
    initializeClickioConsent(),
    lazyLoadBackgroundImages(),
    window.addEventListener("pagehide", cleanup, { once: !0 });
});
const pathName = window.location.pathname.split("/");
let page = pathName[pathName.length - 1];
const galleryItems = [
  {
    type: "large",
    image: "crossfit_arastur_primera_clase.webp",
    category: "Crossfit y Principiantes",
    title: "\xbfC\xf3mo afrontar mi primera clase de crossfit?",
    link: "blog/como-afrontar-primera-clase-de-crossfit.php",
    date: "2/15/2025",
  },
  {
    type: "instagram",
    category: "Gym & Crossfit",
    title:
      "Sigue nuestras clases en Instagram #crosstraining #functionalfitness",
    link: "https://www.instagram.com/crossfitarastur/?hl=en",
    date: "2/15/2025",
  },
  {
    type: "small",
    image: "blog-4.webp",
    category: "Hostoria & Crossfit",
    title: "Or\xedgenes del Crossfit",
    link: "origenes-del-crossfit.php",
    date: "2/15/2025",
  },
  {
    type: "xls-large",
    image: "crossfit-history.webp",
    category: "Crossfit & Nomenclaturas del Crossfit",
    title:
      "WOD, box, AMRAP, Time capâ€¦ \xbfqu\xe9 quieren decir estas palabras?",
    link: "que-son-wod-box-amrap-time-cap.php",
    date: "2/15/2025",
  },
];
let dynamicGallery =
  "blog.php" === page || "blog" === page
    ? galleryItems
    : galleryItems.slice(0, 4);
function createMasonryItems() {
  let e = d.getElementById("masonry-container");
  e &&
    ((e.innerHTML = ""),
    dynamicGallery.forEach((t) => {
      let a = d.createElement("div");
      a.className = "col-lg-4 col-md-6 grid-item masonry-item";
      let o = d.createElement("div");
      (o.className = `blog-item ${t.type}-item`),
        t.image &&
          (o.setAttribute("data-setbg", t.image),
          (o.style.backgroundImage = `../../images/${t.image}`));
      let r = d.createElement("a");
      (r.href = t.link),
        (r.className = "instagram" === t.type ? "instagram-text" : "blog-text"),
        "instagram" === t.type && (r.target = "_blank");
      let l = d.createElement("div");
      if (((l.className = "categories"), "instagram" === t.type)) {
        let n = d.createElement("p");
        (n.textContent = t.category), l.appendChild(n);
        let s = d.createElement("i");
        (s.className = "fa fa-instagram"), l.appendChild(s);
      } else l.textContent = t.category;
      let i = d.createElement("h3");
      (i.textContent = t.title),
        r.appendChild(l),
        r.appendChild(i),
        o.appendChild(r),
        a.appendChild(o),
        e.appendChild(a);
    }));
}
function resizeMasonryItem(e) {
  let t = d.querySelector(".masonry");
  if (!t) return;
  let a = parseInt(
      window.getComputedStyle(t).getPropertyValue("grid-row-gap") || "0"
    ),
    o = parseInt(
      window.getComputedStyle(t).getPropertyValue("grid-auto-rows") || "0"
    ),
    r = e.querySelector(".blog-item");
  if (!r) return;
  let l = Math.ceil((r.getBoundingClientRect().height + a) / (o + a));
  e.style.gridRowEnd = "span " + (l < 8 ? 10 : l);
}
function resizeAllMasonryItems() {
  let e = d.getElementsByClassName("masonry-item");
  for (let t = 0; t < e.length; t++) resizeMasonryItem(e[t]);
}
function initBlogMasonry() {
  d.getElementById("masonry-container") &&
    (createMasonryItems(),
    ["load", "resize"].forEach((e) => {
      window.addEventListener(e, resizeAllMasonryItems, {
        signal: scrollController.signal,
      });
    }),
    setTimeout(resizeAllMasonryItems, 100));
}
const forms = d.querySelectorAll(".needs-validation");
function loadRecaptcha() {
  let e = document.createElement("script");
  (e.src = `https://www.google.com/recaptcha/api.js?render=${RECAPTCHA_PUBLIC}`),
    document.body.appendChild(e),
    (e.onload = function () {
      grecaptcha.ready(function () {
        let e = document.querySelector("#form-scroll");
        e &&
          grecaptcha
            .execute(RECAPTCHA_PUBLIC, { action: "formulario" })
            .then(function (e) {
              let t = document.getElementById("recaptchaResponse");
              t && (t.value = e);
            });
      });
    });
}
Array.from(forms).forEach((e) => {
  e.addEventListener(
    "submit",
    async (t) => {
      if ((t.preventDefault(), !e.checkValidity())) {
        t.stopPropagation(), e.classList.add("was-validated");
        return;
      }
      try {
        if ("undefined" == typeof grecaptcha)
          throw Error(
            "reCAPTCHA no est\xe1 cargado. Por favor, actualice la p\xe1gina."
          );
        let a = await grecaptcha.execute(
            "6Lehe90qAAAAAPEWmVnvUJSDBVOK3j4EfIyNyBjK",
            { action: "formulario" }
          ),
          o = new FormData(e);
        o.append("recaptcha_response", a);
        let r = await fetch("proceso-contacto.php", {
          method: "POST",
          body: o,
        });
        if (!r.ok) throw Error(`HTTP error! status: ${r.status}`);
        let l = await r.json();
        if (l.success) {
          let n = new bootstrap.Modal(document.getElementById("feedback"));
          n.show(), e.reset(), e.classList.remove("was-validated");
        } else throw Error(l.message || "Error desconocido");
      } catch (s) {
        console.error("Error:", s),
          alert(`Error al enviar el formulario: ${s.message}`);
      }
    },
    !1
  );
});
let date = new Date(),
  time = d.createElement("time"),
  text = d.querySelector(".copy-text"),
  year = date.getFullYear();
time.classList.add("copy-time"),
  (text.textContent = "Copyright \xa9 "),
  (time.textContent = year),
  time.setAttribute("datetime", year),
  text.appendChild(time);
const daysMap = {
  LUNES: { tabId: "nav-monday-tab", contentId: "nav-monday" },
  MARTES: { tabId: "nav-tuesday-tab", contentId: "nav-tuesday" },
  MIERCOLES: { tabId: "nav-wednesday-tab", contentId: "nav-wednesday" },
  JUEVES: { tabId: "nav-thursday-tab", contentId: "nav-thursday" },
  VIERNES: { tabId: "nav-friday-tab", contentId: "nav-friday" },
  SABADO: { tabId: "nav-saturday-tab", contentId: "nav-saturday" },
};
function setActiveTab() {
  let e = new Date().getDay(),
    t;
  switch (e) {
    case 0:
    case 1:
      t = "LUNES";
      break;
    case 2:
      t = "MARTES";
      break;
    case 3:
      t = "MIERCOLES";
      break;
    case 4:
      t = "JUEVES";
      break;
    case 5:
      t = "VIERNES";
      break;
    case 6:
      t = "SABADO";
  }
  d.querySelectorAll(".nav-link").forEach((e) => {
    e.classList.remove("active"), e.setAttribute("aria-selected", "false");
  }),
    d.querySelectorAll(".tab-pane").forEach((e) => {
      e.classList.remove("show", "active");
    });
  let a = daysMap[t],
    o = d.getElementById(a.tabId),
    r = d.getElementById(a.contentId);
  o &&
    r &&
    (o.classList.add("active"),
    o.setAttribute("aria-selected", "true"),
    r.classList.add("show", "active"));
}
async function fetchSheetData() {
  try {
    let e = await fetch("api.php");
    if (!e.ok) throw Error("Network response was not ok " + e.statusText);
    let t = await e.json();
    Object.values(daysMap).forEach(({ contentId: e }) => {
      let t = d.querySelector(`#${e} .tab-wrapper`);
      t && (t.innerHTML = "");
    });
    let a = t.values,
      o = a[0].map((e) => e.toUpperCase()),
      r = a.slice(1);
    r.forEach((e) => {
      let t = e[0];
      o.slice(1).forEach((a, o) => {
        let r = e[o + 1];
        if (r && daysMap[a]) {
          let l = d.querySelector(`#${daysMap[a].contentId} .tab-wrapper`);
          if (l) {
            let n = d.createElement("div");
            n.classList.add(
              "single-box",
              "col-sm-6",
              "col-md-4",
              "col-lg-3",
              "mb-2"
            ),
              (n.innerHTML = `
            <div class="px-2 w-100">
                          <div class="single-caption text-center">
                              <div class="caption">
                                  <span>${t}</span>
                                  <h3>${r}</h3>
                              </div>
                          </div>
                          </div>`),
              l.appendChild(n);
          }
        }
      });
    }),
      setActiveTab();
  } catch (l) {
    console.error("Error fetching data:", l);
  }
}
fetchSheetData(),
  d.addEventListener("DOMContentLoaded", () => {
    let e = new URLSearchParams(window.location.search);
    if (e.has("message") && ("contacto.php" === page || "contacto" === page)) {
      let t = d.getElementById("form-scroll");
      console.log(t),
        t &&
          ((t.style.scrollMargin = "7rem"),
          t.scrollIntoView({ behavior: "smooth", top: 80 }));
    }
  });
const opciones = { day: "numeric", month: "long", year: "numeric" },
  footerBlog = d.querySelector(".footer-blog");
dynamicGallery.forEach((e) => {
  if ("instagram" !== e.type) {
    let t = new Date(e.date),
      a = d.createElement("a"),
      o = d.createElement("h3"),
      r = d.createElement("time"),
      l = d.createElement("span");
    a.classList.add("fb-item"),
      (a.href = e.link),
      (o.textContent = e.title),
      (r.dateTime = t),
      l.classList.add("blog-time"),
      (r.innerText = t.toLocaleDateString("es-ES", opciones)),
      l.appendChild(r),
      a.appendChild(o),
      a.appendChild(l),
      footerBlog.appendChild(a);
  }
}),
  document.addEventListener("DOMContentLoaded", function () {
    let e = document.createElement("div");
    document.body.insertBefore(e, document.body.firstChild);
    let t = new MutationObserver((e) => {
      e.forEach((e) => {
        e.addedNodes.length &&
          e.addedNodes.forEach((e) => {
            e.classList &&
              e.classList.contains("cl-consent-node-p") &&
              requestAnimationFrame(() => {
                e.classList.add("loaded");
              });
          });
      });
    });
    t.observe(document.body, { childList: !0, subtree: !0 }),
      window.addEventListener(
        "pagehide",
        () => {
          t.disconnect();
        },
        { once: !0 }
      );
  });
